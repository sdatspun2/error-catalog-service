{
  "openapi": "3.0.0",
  "info": {
    "title": "Error Catalog Service API",
    "version": "1.0",
    "description": "API for Error Catalog Service\n\nExample use cases:\n\n1. Microservices exposing APIs can retrieve error types from Error Catalog Service instead of hard-coding.\n2. Developer portal can show errors associated with APIs using the Error Catalog Service.\n3. Linters and automation tests for API can verify errors sent by services against the API contract using Error Catalog Service.",
    "contact": {
      "name": "Sanjay Dalal",
      "email": "sanjay.dalal@cal.berkeley.edu",
      "url": "https://github.com/sdatspun2"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "get-error-catalogs"
    },
    {
      "name": "post-error-catalog"
    },
    {
      "name": "get-error-catalog"
    },
    {
      "name": "put-error-catalog"
    },
    {
      "name": "patch-error-catalog"
    },
    {
      "name": "delete-error-catalog"
    },
    {
      "name": "get-error-types"
    },
    {
      "name": "post-error-type"
    },
    {
      "name": "get-error-type"
    },
    {
      "name": "put-error-type"
    },
    {
      "name": "patch-error-type"
    },
    {
      "name": "delete-error-type"
    }
  ],
  "paths": {
    "/v1/error/error-catalogs": {
      "get": {
        "summary": "Get error catalogs",
        "tags": [
          "get-error-catalogs"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "maximum number of results to return at one time"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "the offset of the results"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "total_required",
            "description": "indicates total number of items (total_items) and pages (total_pages) are expected to be returned in the response"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "namespace",
            "description": "namespace for error"
          },
          {
            "schema": {
              "$ref": "./models/language.json"
            },
            "in": "query",
            "name": "language of error catalog",
            "description": "language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog_list"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "get-errors",
        "description": "Get error catalogs",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found"
        ]
      },
      "post": {
        "summary": "Create an error catalog",
        "tags": [
          "post-error-catalog"
        ],
        "operationId": "post-error-catalog",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "description": "Create an error catalog in given namespace"
      },
      "parameters": []
    },
    "/v1/error/error-catalogs/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Error catalog id"
        }
      ],
      "get": {
        "summary": "Get error catalog",
        "tags": [
          "get-error-catalog"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "get-error-catalogs-id",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found"
        ],
        "description": "Get identified error catalog"
      },
      "put": {
        "summary": "Update error catalog",
        "tags": [
          "put-error-catalog"
        ],
        "operationId": "put-error-catalog",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found",
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "description": "Completely update the identified error catalog"
      },
      "patch": {
        "summary": "Partially update error catalog",
        "tags": [
          "patch-error-catalog"
        ],
        "operationId": "patch-error-catalogs",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found",
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "description": "Partially update the identified error catalog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./models/patch_request.json"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete error catalog",
        "tags": [
          "delete-error-catalog"
        ],
        "operationId": "delete-error-catalog",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found"
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "description": "Delete the identified error catalog (and all associated error type)"
      }
    },
    "/v1/error/error-catalogs/{id}/error-types": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "description": "Error catalog id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get error type",
        "tags": [
          "get-error-types"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "maximum number of results to return at one time"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "the offset of the results"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "total_required",
            "description": "indicates total number of items (total_items) and pages (total_pages) are expected to be returned in the response"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "http_status_code",
            "description": "HTTP status code associated with error type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "namespace",
            "description": "namespace where the error is used"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "laguage for error type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_type_list"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "get-error-catalogs-id-error-catalog-items",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/parameter_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid"
        ],
        "description": "Get all error type for identified catalog"
      },
      "post": {
        "summary": "Create error type",
        "tags": [
          "post-error-type"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_type"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "post-error-caalogs-id-error-catalog-items",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/message_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/http_status_code_invalid"
        ],
        "description": "Create error type in identified catalog"
      }
    },
    "/v1/error/error-catalogs/{id}/error-types/{eid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Error catalog id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "eid",
          "in": "path",
          "required": true,
          "description": "Error type id"
        }
      ],
      "put": {
        "summary": "Complete update of error type",
        "tags": [
          "put-error-type"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_type"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "put-error-caalogs-id-error-catalog-items",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/message_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/http_status_code_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found"
        ],
        "description": "Completely updates the identified error type in the error catalog"
      },
      "patch": {
        "summary": "Partial update of error type",
        "tags": [
          "patch-error-type"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_type"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "operationId": "patch-error-caalogs-id-error-catalog-items",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/message_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/http_status_code_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/resource_not_found"
        ],
        "description": "Partially updates the identified error type in the error catalog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./models/patch_request.json"
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete error type",
        "tags": [
          "delete-error-type"
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "operationId": "delete-error-caalogs-id-error-catalog-items",
        "description": "Deletes the identified error type from the error catalog"
      },
      "get": {
        "summary": "Get error type",
        "tags": [
          "get-error-type"
        ],
        "operationId": "get-error-catalogs-id-error-type-eid",
        "x-error-types": [
          "/v1/error/error-catalogs/{ecid}/error-types/language_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/namespace_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/message_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/http_status_code_invalid",
          "/v1/error/error-catalogs/{ecid}/error-types/esource_not_found"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error_type.json"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/error.json"
                }
              }
            }
          }
        },
        "description": "Get the identified error type from the error catalog"
      }
    }
  },
  "components": {
    "schemas": {
      "catalog": {
        "$ref": "./models/error_catalog.json"
      },
      "catalog_list": {
        "$ref": "./models/error_catalog_list.json"
      },
      "error_type": {
        "$ref": "./models/error_type.json"
      },
      "error_type_list": {
        "$ref": "./models/error_type_list.json"
      }
    },
    "securitySchemes": {
      "API Key - 1": {
        "type": "oauth2"
      }
    }
  }
}